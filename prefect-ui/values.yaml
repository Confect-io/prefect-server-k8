# Default values for prefect-ui-kubernetes.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

prefect:
  busybox:
    image:
      repository: busybox:1.28
  agent:
    create: true
    image:
      repository: prefecthq/prefect
      pullPolicy: Always
    environment: {}
    service: {}
    replicas:
      minReplicas: 1
      maxReplicas: 1
      targetCPUUtilizationPercentage: 65
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi
    job_resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 128Mi
  website:
    create: true
    image:
      repository: prefecthq/ui
      pullPolicy: Always
    environment: {}
    service:
      domainName: prefect.local
      name: http
      type: ClusterIP
      port: 8080
    replicas:
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 65
    resources:
      limits:
        cpu: 20m
        memory: 128Mi
      requests:
        cpu: 10m
        memory: 32Mi
  scheduler:
    create: true
    image:
      repository: prefecthq/server
      pullPolicy: Always
    environment: {}
    service: {}
    replicas:
      minReplicas: 1
      maxReplicas: 1
      targetCPUUtilizationPercentage: 65
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 50m
        memory: 64Mi
  apollo:
    create: true
    image:
      repository: prefecthq/apollo
      pullPolicy: Always
    environment: {}
    service:
      domainName: api.prefect.local
      name: graphql
      type: ClusterIP
      port: 4200
    replicas:
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 65
    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi
  graphql:
    create: true
    image:
      repository: prefecthq/server
      pullPolicy: Always
    environment: {}
    service:
      name: graphql
      type: ClusterIP
      port: 4201
    replicas:
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 65
    resources:
      limits:
        cpu: 200m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 256Mi
  hasura:
    create: true
    image:
      repository: hasura/graphql-engine:v1.1.0
      pullPolicy: IfNotPresent
    environment: {}
    service:
      name: graphql
      type: ClusterIP
      port: 3000
    replicas:
      minReplicas: 1
      maxReplicas: 4
      targetCPUUtilizationPercentage: 65
    resources:
      limits:
        cpu: 200m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 256Mi
    secrets:
      adminSecret: hasura-secret-admin-secret
  postgres:
    create: true
    image:
      repository: centos/postgresql-12-centos7:latest
      pullPolicy: IfNotPresent
    environment: {}
    service:
      name: postgres
      type: ClusterIP
      port: 5432
    resources:
      limits:
        cpu: 1000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 1Gi
    secrets:
      username: prefect
      password: test-password
      database: prefect_server
    volume:
      storage: "1Gi"
      accessModes: ReadWriteOnce
      mounts:
        name: postgres-db
        mountPoint: /var/lib/pgsql/data
        subPath: pgdata
  minio:
    create: false
    image:
      repository: minio/minio:RELEASE.2020-03-05T01-04-19Z
      pullPolicy: IfNotPresent
    environment: {}
    service:
      domainName: minio.prefect.local
      name: minio
      type: ClusterIP
      port: 9000
    resources:
      limits:
        cpu: 100m
        memory: 8Gi
      requests:
        cpu: 50m
        memory: 1Gi
    secrets:
      accessKey: prefect
      secretKey: test-password
    volume:
      storage: "1Gi"
      accessModes: ReadWriteOnce
      mounts:
        name: minio-db
        mountPoint: /data
        subPath: data

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
namespaceOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000
  # seLinuxOptions:
  #   level: 's0:c107,c29'

securityContext: {}
  # capabilities:
  #   drop:
  #     - KILL
  #     - MKNOD
  #     - SETGID
  #     - SETUID
  # readOnlyRootFilesystem: false
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  # 'ingress' = Kubernetes Ingress
  # 'route' = OpenShift Route
  type: ingress
  annotations: {}
  tls: false
  secrets:
    cert: ""
    key: ""

nodeSelector: {}

tolerations: []

affinity: {}
