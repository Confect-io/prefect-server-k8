{{ if .Values.prefect.minio.create }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prefect-ui.name" . }}-minio
  namespace: {{ include "prefect-ui.namespace" . }}
  labels:
    app.kubernetes.io/component: minio
    {{- include "prefect-ui.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "prefect-ui.name" . }}-minio
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: minio
      {{- include "prefect-ui.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: minio
        {{- include "prefect-ui.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "prefect-ui.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: minio
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.prefect.minio.image.repository }}"
          imagePullPolicy: {{ .Values.prefect.minio.image.pullPolicy }}
          args:
          - server
          - {{ .Values.prefect.minio.volume.mounts.mountPoint }}
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom: { secretKeyRef: { name: {{ include "prefect-ui.name" . }}-minio, key: MINIO_ACCESS_KEY } }
            - name: MINIO_SECRET_KEY
              valueFrom: { secretKeyRef: { name: {{ include "prefect-ui.name" . }}-minio, key: MINIO_SECRET_KEY } }
            {{- with .Values.prefect.minio.environment }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: {{ .Values.prefect.minio.service.name }}
              containerPort: {{ .Values.prefect.minio.service.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.prefect.minio.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: {{ .Values.prefect.minio.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          volumeMounts:
            # TODO: customize minio config?
            - name: configmap-files
              mountPath: /opt/configmap
            - name: minio-db
              mountPath: {{ .Values.prefect.minio.volume.mounts.mountPoint }}
              subPath: {{ .Values.prefect.minio.volume.mounts.subPath }}
          resources:
            {{- toYaml .Values.prefect.minio.resources | nindent 12 }}
      volumes:
        - name: configmap-files
          configMap:
            name: {{ include "prefect-ui.name" . }}-minio
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: miniodb
    spec:
      accessModes: [ "ReadWriteOnce" ]
#      storageClassName: gp2
      resources:
        requests:
          storage: {{ .Values.prefect.minio.volume.storage }}
{{ end }}